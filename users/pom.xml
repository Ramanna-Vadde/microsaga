<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>integration.jboss.org</groupId>
		<artifactId>fis2demo</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>users</artifactId>

	<properties>
		<fabric8.namespace>fisdemo</fabric8.namespace>
		<fabric8.version>2.2.170.redhat-000004</fabric8.version>
		<fabric8.plugin.version>3.5.22</fabric8.plugin.version>
		
		<spring-boot.version>1.5.6.RELEASE</spring-boot.version>
		<spring-cloud-dependencies.version>Brixton.SR7</spring-cloud-dependencies.version>
		<mongo.version>3.2.2</mongo.version>
		<camelamq.version>1.1.0</camelamq.version>
	</properties>

	<!-- USING SPRING BOOT HYSTRIX USES @EnableCircuitBreaker import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand; 
		@HystrixCommand(fallbackMethod = "helloFallback", commandProperties = { @HystrixProperty(name 
		= "execution.isolation.thread.timeoutInMilliseconds", value = "5000") }) -->

	<!-- USING CAMEL HYSTRIX USES .hystrix().hystrixConfiguration() .executionTimeoutInMilliseconds(5000).circuitBreakerSleepWindowInMilliseconds(10000) 
		.to("http://fooservice.com/slow") .onFallback() .transform().constant("Fallback 
		message") .end() -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-project-bom-camel-spring-boot</artifactId>
				<version>${fabric8.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- fabric8 bom must be before fabric8 bom -->
			<!-- <dependency> -->
			<!-- <groupId>io.fabric8</groupId> -->
			<!-- <artifactId>fabric8-project-bom-with-platform-deps</artifactId> -->
			<!-- <version>${fabric8.version}</version> -->
			<!-- <type>pom</type> -->
			<!-- <scope>import</scope> -->
			<!-- </dependency> -->
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- PURE SPRING BOOT -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-hystrix</artifactId> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>


		<!-- <dependency> -->
		<!-- <groupId>org.springframework.boot</groupId> -->
		<!-- <artifactId>spring-boot-starter-web</artifactId> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>0.9</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<version>3.1.4.GA-redhat-2</version>
		</dependency>

		<!-- MONGO DB -->
		<!-- <dependency> -->
		<!-- <groupId>org.mongodb</groupId> -->
		<!-- <artifactId>mongo-java-driver</artifactId> -->
		<!-- <version>3.2.2</version> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>org.mongodb</groupId> -->
		<!-- <artifactId>bson</artifactId> -->
		<!-- <version>${mongo.version}</version> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>org.springframework.data</groupId> -->
		<!-- <artifactId>spring-data-mongodb</artifactId> -->
		<!-- </dependency> -->

		<!-- ACTIVE MQ -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-activemq</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-broker</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-pool</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-camel</artifactId>
		</dependency>

		<!-- APACHE CAMEL -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-restlet</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-stream</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http4</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-mongodb</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jsonpath</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jms</artifactId>
		</dependency>

		<!-- SPRING-BOOT STARTERS -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-boot</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jta-narayana</artifactId>
		</dependency>

		<!-- HYSTRIX -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-hystrix-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-hystrix</artifactId>
			<!-- use the same version as your Camel core version -->
		</dependency>

	</dependencies>


	<build>
		<plugins>
			<!-- Spring Boot Maven Support -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- OCP FABRIC8 PLUGIN -->

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fabric8.plugin.version}</version>

				<configuration>
					<pushRegistry>openshift-registry.org</pushRegistry>
					<authConfig>
						<useOpenShiftAuth/>
						<!--
						<username>mthirion</username>
						<password>0hEBheQlmuJfItMMmZCE93eOV8EzNdQ-aLd8Q0zIuF4</password>
						-->
					</authConfig>

					<images>
						<image>
							<name>fisdemo/users</name>
						</image>
					</images>

					<generator>
						<config>
							<spring-boot>
								<fromMode>istag</fromMode>
								<from>openshift/fis-java-openshift:2.0</from>
								<name>users</name>
							</spring-boot>
						</config>
					</generator>
					
							<!-- <resources> -->
			<!-- <labels> -->
			<!-- <all> -->
			<!-- <property> -->
			<!-- <name>test</name> -->
			<!-- <value>testValue</value> -->
			<!-- </property> -->
			<!-- </all> -->
			<!-- <service> -->
			<!-- <property> -->
			<!-- <name>serviceName</name> -->
			<!-- <value>myService</value> -->
			<!-- </property> -->
			<!-- <property> -->
			<!-- <name>persistent</name> -->
			<!-- <value>true</value> -->
			<!-- </property> -->
			<!-- </service> -->
			<!-- <replicaSet> -->
			<!-- ... -->
			<!-- </replicaSet> -->
			<!-- <pod> -->
			<!-- ... -->
			<!-- </pod> -->
			<!-- <deployment> -->
			<!-- ... -->
			<!-- </deployment> -->
			<!-- </labels> -->

			<!-- <annotations> -->
			<!-- ... -->
			<!-- </annotations> -->
			<!-- </resource> -->


				</configuration>

<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						 <id>fabric8</id>  -->
<!-- 						<id>fmp</id> -->
<!-- 						<goals> -->
<!-- 							<goal>resource</goal> -->
<!-- 							<goal>helm</goal> -->
<!-- 							<goal>build</goal> -->
<!-- 							<goal>deploy</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
			</plugin>




		</plugins>
	</build>
</project>
